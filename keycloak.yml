---
- hosts: keycloak
  become: yes

  vars:
    resolv_searchpath: "{{ dns_resolv_searchpath }}"
    resolv_dns_server: "{{ dns_server_list }}"
    save_hosts: "{{ etc_save_hosts }}"

  pre_tasks:
  - name: set timezone to "{{timezone}}"
    timezone:
      name: "{{timezone}}"
    tags:
      - prep

  - name: Update APT-GET cache
    apt: update_cache=yes
    tags:
      - prep

  - name: Update repository for Docker part 1 - Install some stuff
    become: yes
    command: "sudo apt-get install -y apt-transport-https ca-certificates curl  software-properties-common"
    tags:
      - prep

  - name: Add GPG key for Docker
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      state: present
    tags:
      - prep

  - name: Add APT repo for Docker
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
    tags:
      - prep

  - name: Update APT-GET cache again
    apt: update_cache=yes
    tags:
      - prep

  - name: Installs GIT
    apt:
      name: git
      state: present
      update_cache: yes
    tags:
      - prep

  - name: Installs docker-ce with the updated cache and repo
    apt:
      name: docker-ce={{ docker_ce_version }}
      state: present
      update_cache: yes
    tags:
      - prep

  - name: Make sure we have a 'docker' group
    group:
      name: docker
      state: present
    tags:
      - prep

  - name: Add current user to Docker group
    user:
      name: "{{ansible_ssh_user}}"
      group: docker
      append: yes
    tags:
      - prep

  - name: Enable Journald persistence
    ini_file:
      dest: "/etc/systemd/journald.conf"
      section: Journal
      option: Storage
      value: "persistent"
    register: enable_journald_persistence
    tags:
       - prep
       - log

  - name: Restart Journald service
    service:
      name: systemd-journald
      state: restarted
    when: enable_journald_persistence.changed
    tags:
       - prep
       - log

  - name: Set Docker log driver
    template:
      src: ../templates/daemon.json.j2
      dest: "/etc/docker/daemon.json"
    when: docker_log_driver is defined
    register: set_docker_log_driver
    tags:
       - prep
       - log

  - name: Restart Docker service
    service:
      name: docker
      state: restarted
    when: set_docker_log_driver.changed
    tags:
       - prep
       - log

  - name: Installs PIP
    apt:
      name: python-pip
      state: present
      update_cache: yes
    tags:
      - prep 
      - pip   
      
  - name: Install PIP Prerequisites
    apt: name={{ item }} state=latest
    with_items:
      - libpq-dev
      - python-psycopg2
    tags:
      - pip

  - name: Installing docker compose
    pip:
       name: docker-compose
       version: "{{ docker_compose_version if docker_compose_version else omit }}"
       state: present    
    tags:
      - prep
      - compose

  post_tasks:
  - name: Log into Sogema JFrog Docker registry for current user
    docker_login:
      registry: "{{docker_registry}}"
      username: "{{docker_user}}"
      password: "{{docker_pwd}}"
      email: "{{docker_email}}"
    tags:
      - login

  - name: Log into Sogema JFrog Docker registry for '{{ansible_ssh_user}}' user
    docker_login:
      config_path: "/home/{{ansible_ssh_user}}/.docker/config.json"
      registry: "{{docker_registry}}"
      username: "{{docker_user}}"
      password: "{{docker_pwd}}"
      email: "{{docker_email}}"
    tags:
      - login

  - name: Create keycloak folder
    file: 
      path: /home/{{ansible_ssh_user}}/keycloak
      owner: "{{ansible_ssh_user}}" 
      group: sudo 
      mode: 0755 
      state: directory
    tags:
      - kc


  - name: Upload docker-compose file
    template: 
      src: ../templates/keycloak-docker-compose.yml.j2
      dest: "{{docker_compose_folder}}/docker-compose.yml"
      owner: "{{ansible_ssh_user}}"
      group: sudo
      mode: 0755
    tags:
      - deploy

  - name: Run the 'down' command for Docker Compose
    docker_service:
      project_name: "{{ansible_ssh_user}}"
      project_src: "{{docker_compose_folder}}"
      state: absent
    tags:
      - deploy

  - name: Run the 'up' command for Docker Compose
    docker_service:
      project_name: "{{ansible_ssh_user}}"
      project_src: "{{docker_compose_folder}}"
      state: present
      pull: "{{ pull_images if pull_images else omit }}"
      services: "{{ available_docker_services }}"
    tags:
      - deploy

  - name: Wait for port {{db_port}} to become open on the host
    wait_for: host={{full_hostname}} port={{db_port}}
    when: "'keycloak-db' in available_docker_services"
    tags:
       - deploy
       - db

  - name: Create Keycloak database in the Postgres container
    postgresql_db: name={{db_name}} port={{db_port}} login_host={{full_hostname}} login_user={{db_user}} login_password={{db_pass}}
    when: "'keycloak-db' in available_docker_services"
    tags:
      - deploy
      - db


  roles:
    - { role: soplakanets.hosts }
    - { role: ypsman.resolv } 

